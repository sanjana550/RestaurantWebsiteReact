{"ast":null,"code":"// // import cartContext from \"./cart-context\";\n// // import { useReducer } from \"react\";\n\n// // const defaultCartState={\n// //     items:[],\n// //     totalAmount:0\n// }\n// // const cartReducer=(state,action)=>{\n// //     if(action.type==='ADD')\n// //     {\n// //     const updatedItems=state.items.concat(action.item);\n// //     const updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;\n\n// //     return {\n// //     items:updatedItems,\n// //     totalAmount:updatedTotalAmount}\n// //     }\n// //     return defaultCartState;  \n\n// // }\n\n// const cartReducer = (state, action) => {\n//     if (action.type === 'ADD') {\n//       const updatedItems = state.items.concat(action.item);\n//       const updatedTotalAmount =\n//         state.totalAmount + action.item.price * action.item.amount;\n\n//       return {\n//         items: updatedItems,\n//         totalAmount: updatedTotalAmount, // Corrected property name\n//       };\n//     }\n//     return defaultCartState;\n//   };\n\n// const CartProvider=(props)=>{\n//    const [cartState,dispatchCartAction]= useReducer(cartReducer,defaultCartState)\n\n//     const addItemToCartHandler=(item)=>{\n//         dispatchCartAction({type:'ADD',item:item})\n//     }\n//     const removeItemFromCartHandler=(id)=>{\n//         dispatchCartAction({type:'REMOVE',id:id})\n\n//     }\n//     const CartContext={\n//         items:[],\n//         totalAmount:cartState.totalAmount,\n//         addItem:addItemToCartHandler,\n//         removeItem:removeItemFromCartHandler,\n//     }\n// return <cartContext.Provider value={CartContext}>\n//     {props.children}\n// </cartContext.Provider>\n// }\n// export default CartProvider;","map":{"version":3,"names":[],"sources":["C:/React Projects/002 01-starting-project (1)/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["// // import cartContext from \"./cart-context\";\r\n// // import { useReducer } from \"react\";\r\n\r\n// // const defaultCartState={\r\n// //     items:[],\r\n// //     totalAmount:0\r\n// }\r\n// // const cartReducer=(state,action)=>{\r\n// //     if(action.type==='ADD')\r\n// //     {\r\n// //     const updatedItems=state.items.concat(action.item);\r\n// //     const updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;\r\n    \r\n// //     return {\r\n// //     items:updatedItems,\r\n// //     totalAmount:updatedTotalAmount}\r\n// //     }\r\n// //     return defaultCartState;  \r\n\r\n// // }\r\n\r\n\r\n// const cartReducer = (state, action) => {\r\n//     if (action.type === 'ADD') {\r\n//       const updatedItems = state.items.concat(action.item);\r\n//       const updatedTotalAmount =\r\n//         state.totalAmount + action.item.price * action.item.amount;\r\n  \r\n//       return {\r\n//         items: updatedItems,\r\n//         totalAmount: updatedTotalAmount, // Corrected property name\r\n//       };\r\n//     }\r\n//     return defaultCartState;\r\n//   };\r\n  \r\n// const CartProvider=(props)=>{\r\n//    const [cartState,dispatchCartAction]= useReducer(cartReducer,defaultCartState)\r\n\r\n\r\n//     const addItemToCartHandler=(item)=>{\r\n//         dispatchCartAction({type:'ADD',item:item})\r\n//     }\r\n//     const removeItemFromCartHandler=(id)=>{\r\n//         dispatchCartAction({type:'REMOVE',id:id})\r\n\r\n//     }\r\n//     const CartContext={\r\n//         items:[],\r\n//         totalAmount:cartState.totalAmount,\r\n//         addItem:addItemToCartHandler,\r\n//         removeItem:removeItemFromCartHandler,\r\n//     }\r\n// return <cartContext.Provider value={CartContext}>\r\n//     {props.children}\r\n// </cartContext.Provider>\r\n// }\r\n// export default CartProvider;"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}