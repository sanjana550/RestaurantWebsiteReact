{"ast":null,"code":"var _jsxFileName = \"C:\\\\React Projects\\\\002 01-starting-project (1)\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\n// // import cartContext from \"./cart-context\";\n// // import { useReducer } from \"react\";\n\n// // const defaultCartState={\n// //     items:[],\n// //     totalAmount:0\n// }\n// // const cartReducer=(state,action)=>{\n// //     if(action.type==='ADD')\n// //     {\n// //     const updatedItems=state.items.concat(action.item);\n// //     const updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;\n\n// //     return {\n// //     items:updatedItems,\n// //     totalAmount:updatedTotalAmount}\n// //     }\n// //     return defaultCartState;  \n\n// // }\n\n// const cartReducer = (state, action) => {\n//     if (action.type === 'ADD') {\n//       const updatedItems = state.items.concat(action.item);\n//       const updatedTotalAmount =\n//         state.totalAmount + action.item.price * action.item.amount;\n\n//       return {\n//         items: updatedItems,\n//         totalAmount: updatedTotalAmount, // Corrected property name\n//       };\n//     }\n//     return defaultCartState;\n//   };\n\n// const CartProvider=(props)=>{\n//    const [cartState,dispatchCartAction]= useReducer(cartReducer,defaultCartState)\n\n//     const addItemToCartHandler=(item)=>{\n//         dispatchCartAction({type:'ADD',item:item})\n//     }\n//     const removeItemFromCartHandler=(id)=>{\n//         dispatchCartAction({type:'REMOVE',id:id})\n\n//     }\n//     const CartContext={\n//         items:[],\n//         totalAmount:cartState.totalAmount,\n//         addItem:addItemToCartHandler,\n//         removeItem:removeItemFromCartHandler,\n//     }\n// return <cartContext.Provider value={CartContext}>\n//     {props.children}\n// </cartContext.Provider>\n// }\n// export default CartProvider;\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => {\n      item.id === action.item.id;\n    });\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","concat","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/React Projects/002 01-starting-project (1)/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["// // import cartContext from \"./cart-context\";\r\n// // import { useReducer } from \"react\";\r\n\r\n// // const defaultCartState={\r\n// //     items:[],\r\n// //     totalAmount:0\r\n// }\r\n// // const cartReducer=(state,action)=>{\r\n// //     if(action.type==='ADD')\r\n// //     {\r\n// //     const updatedItems=state.items.concat(action.item);\r\n// //     const updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;\r\n    \r\n// //     return {\r\n// //     items:updatedItems,\r\n// //     totalAmount:updatedTotalAmount}\r\n// //     }\r\n// //     return defaultCartState;  \r\n\r\n// // }\r\n\r\n\r\n// const cartReducer = (state, action) => {\r\n//     if (action.type === 'ADD') {\r\n//       const updatedItems = state.items.concat(action.item);\r\n//       const updatedTotalAmount =\r\n//         state.totalAmount + action.item.price * action.item.amount;\r\n  \r\n//       return {\r\n//         items: updatedItems,\r\n//         totalAmount: updatedTotalAmount, // Corrected property name\r\n//       };\r\n//     }\r\n//     return defaultCartState;\r\n//   };\r\n  \r\n// const CartProvider=(props)=>{\r\n//    const [cartState,dispatchCartAction]= useReducer(cartReducer,defaultCartState)\r\n\r\n\r\n//     const addItemToCartHandler=(item)=>{\r\n//         dispatchCartAction({type:'ADD',item:item})\r\n//     }\r\n//     const removeItemFromCartHandler=(id)=>{\r\n//         dispatchCartAction({type:'REMOVE',id:id})\r\n\r\n//     }\r\n//     const CartContext={\r\n//         items:[],\r\n//         totalAmount:cartState.totalAmount,\r\n//         addItem:addItemToCartHandler,\r\n//         removeItem:removeItemFromCartHandler,\r\n//     }\r\n// return <cartContext.Provider value={CartContext}>\r\n//     {props.children}\r\n// </cartContext.Provider>\r\n// }\r\n// export default CartProvider;\r\n\r\nimport { useReducer } from 'react';\r\n\r\nimport CartContext from './cart-context';\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\r\n    const existingCartItemIndex=state.items.findIndex(item=>{\r\n        item.id===action.item.id\r\n    })\r\n    const existingCartItem=state.items[existingCartItemIndex]\r\n    const updatedItems = state.items.concat(action.item);\r\n    \r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount\r\n    };\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({type: 'ADD', item: item});\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({type: 'REMOVE', id: id});\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,OAAO;AAElC,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IACrF,MAAMC,qBAAqB,GAACP,KAAK,CAACH,KAAK,CAACW,SAAS,CAACJ,IAAI,IAAE;MACpDA,IAAI,CAACK,EAAE,KAAGR,MAAM,CAACG,IAAI,CAACK,EAAE;IAC5B,CAAC,CAAC;IACF,MAAMC,gBAAgB,GAACV,KAAK,CAACH,KAAK,CAACU,qBAAqB,CAAC;IACzD,MAAMI,YAAY,GAAGX,KAAK,CAACH,KAAK,CAACe,MAAM,CAACX,MAAM,CAACG,IAAI,CAAC;IAEpD,OAAO;MACLP,KAAK,EAAEc,YAAY;MACnBb,WAAW,EAAEK;IACf,CAAC;EACH;EACA,OAAOP,gBAAgB;AACzB,CAAC;AAED,MAAMiB,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGzB,UAAU,CAACO,WAAW,EAAEH,gBAAgB,CAAC;EAEjF,MAAMsB,oBAAoB,GAAId,IAAI,IAAK;IACrCa,kBAAkB,CAAC;MAACf,IAAI,EAAE,KAAK;MAAEE,IAAI,EAAEA;IAAI,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMe,yBAAyB,GAAIV,EAAE,IAAK;IACxCQ,kBAAkB,CAAC;MAACf,IAAI,EAAE,QAAQ;MAAEO,EAAE,EAAEA;IAAE,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMW,WAAW,GAAG;IAClBvB,KAAK,EAAEmB,SAAS,CAACnB,KAAK;IACtBC,WAAW,EAAEkB,SAAS,CAAClB,WAAW;IAClCuB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EACd,CAAC;EAED,oBACExB,OAAA,CAACF,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EACtCX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACd,EAAA,CAvBIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AAyBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}